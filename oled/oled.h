
#define SSD1306_SETCONTRAST 0x81
#define SSD1306_SEGREMAP 0xA0
#define SSD1306_DISPLAYALLON_RESUME 0xA4
#define SSD1306_DISPLAYALLON 0xA5
#define SSD1306_NORMALDISPLAY 0xA6
#define SSD1306_INVERTDISPLAY 0xA7
#define SSD1306_DISPLAYOFF 0xAE
#define SSD1306_DISPLAYON 0xAF
#define SSD1306_SETDISPLAYOFFSET 0xD3
#define SSD1306_SETCOMPINS 0xDA
#define SSD1306_SETVCOMDETECT 0xDB
#define SSD1306_SETDISPLAYCLOCKDIV 0xD5
#define SSD1306_SETPRECHARGE 0xD9
#define SSD1306_SETMULTIPLEX 0xA8
#define SSD1306_SETLOWCOLUMN 0x00
#define SSD1306_SETHIGHCOLUMN 0x10
#define SSD1306_SETSTARTLINE 0x40
#define SSD1306_MEMORYMODE 0x20
#define SSD1306_COLUMNADDR 0x21
#define SSD1306_PAGEADDR 0x22
#define SSD1306_COMSCANINC 0xC0
#define SSD1306_COMSCANDEC 0xC8
#define SSD1306_CHARGEPUMP 0x8D
#define SSD1306_EXTERNALVCC 0x1
#define SSD1306_SWITCHCAPVCC 0x2
#define SSD1306_TERMINATE_CMDS 0xFF

#define SSD1306_XFLIP_OFF 0xA1
#define SSD1306_XFLIP 0xA0

#define SSD1306_YFLIP 0xC0
#define SSD1306_YFLIP_OFF 0xC8

/* choose VCC mode */
#define SSD1306_EXTERNALVCC 0x1
#define SSD1306_SWITCHCAPVCC 0x2
// #define vccstate SSD1306_EXTERNALVCC
#define vccstate SSD1306_SWITCHCAPVCC

#define SSD1306_PSZ 32

const uint8_t ssd1306_init_array[] =
    {
        SSD1306_DISPLAYOFF,         // 0xAE
        SSD1306_SETDISPLAYCLOCKDIV, // 0xD5
        0x80,                       // the suggested ratio 0x80
        SSD1306_SETMULTIPLEX,       // 0xA8
        0x1F, // for 64-wide displays
        SSD1306_SETDISPLAYOFFSET,   // 0xD3
        0x00,                       // no offset
        SSD1306_SETSTARTLINE | 0x00, // 0x40 | line
        SSD1306_CHARGEPUMP,         // 0x8D
        0x14,                       // enable?
        SSD1306_MEMORYMODE,         // 0x20
        0x00,                       // 0x0 act like ks0108
        SSD1306_SEGREMAP | 0x1,     // 0xA0 | bit
        SSD1306_COMSCANDEC,
        SSD1306_SETCOMPINS,  // 0xDA
        0x12,                //
        SSD1306_SETCONTRAST, // 0x81
        0x8F,
        SSD1306_SETPRECHARGE, // 0xd9
        0xF1,
        SSD1306_SETVCOMDETECT, // 0xDB
        0x40,
        SSD1306_DISPLAYALLON_RESUME, // 0xA4
        // SSD1306_YFLIP,
        // SSD1306_XFLIP,
        SSD1306_NORMALDISPLAY, // 0xA6
        SSD1306_DISPLAYON,     // 0xAF --turn on oled panel
        SSD1306_TERMINATE_CMDS // 0xFF --fake command to mark end
};

#define SSD1306_W 64
#define SSD1306_H 48
#define SSD1306_FULLUSE
#define SSD1306_OFFSET 32

#include "lib_swi2c.h"

i2c_device_t i2cDev = {
    // .pin_scl = GPIO_PC3,
    // .pin_sda = GPIO_PC4,
    .pin_scl = GPIO_PA2,
    .pin_sda = GPIO_PD6,

    // .address = 0x3C,
    .address = 0x78,
};
/* 
= {
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xAF, 0xAF, 0xAF, 0xAF};
 */